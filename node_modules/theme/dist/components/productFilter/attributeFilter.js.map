{"version":3,"sources":["../../../src/components/productFilter/attributeFilter.js"],"names":["AttributeValue","props","onChange","attributeName","valueName","setFilterAttribute","unsetFilterAttribute","checked","event","target","setState","state","componentWillReceiveProps","nextProps","render","count","isDisabled","classChecked","classDisabled","Component","AttributeSet","attribute","values","map","value","index","name","AttributeFilter","attributes","attributeSets"],"mappings":"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","file":"attributeFilter.js","sourcesContent":["import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { themeSettings, text } from '../../lib/settings';\n\nclass AttributeValue extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tchecked: props.checked\n\t\t};\n\t}\n\n\tcomponentWillReceiveProps(nextProps) {\n\t\tif (nextProps.checked !== this.props.checked) {\n\t\t\tthis.setState({ checked: nextProps.checked });\n\t\t}\n\t}\n\n\tonChange = event => {\n\t\tconst {\n\t\t\tattributeName,\n\t\t\tvalueName,\n\t\t\tsetFilterAttribute,\n\t\t\tunsetFilterAttribute\n\t\t} = this.props;\n\t\tconst checked = event.target.checked;\n\n\t\tthis.setState({ checked: checked });\n\n\t\tif (checked) {\n\t\t\tsetFilterAttribute(attributeName, valueName);\n\t\t} else {\n\t\t\tunsetFilterAttribute(attributeName, valueName);\n\t\t}\n\t};\n\n\trender() {\n\t\tconst { valueName, count } = this.props;\n\t\tconst isDisabled = count === 0;\n\t\tconst classChecked = this.state.checked ? 'attribute-checked' : '';\n\t\tconst classDisabled = isDisabled ? 'attribute-disabled' : '';\n\n\t\treturn (\n\t\t\t<label className={classChecked + ' ' + classDisabled}>\n\t\t\t\t<input\n\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\tdisabled={isDisabled}\n\t\t\t\t\tonChange={this.onChange}\n\t\t\t\t\tchecked={this.state.checked}\n\t\t\t\t/>\n\t\t\t\t{valueName}\n\t\t\t</label>\n\t\t);\n\t}\n}\n\nconst AttributeSet = ({\n\tattribute,\n\tsetFilterAttribute,\n\tunsetFilterAttribute\n}) => {\n\tconst values = attribute.values.map((value, index) => (\n\t\t<AttributeValue\n\t\t\tkey={index}\n\t\t\tattributeName={attribute.name}\n\t\t\tvalueName={value.name}\n\t\t\tchecked={value.checked}\n\t\t\tcount={value.count}\n\t\t\tsetFilterAttribute={setFilterAttribute}\n\t\t\tunsetFilterAttribute={unsetFilterAttribute}\n\t\t/>\n\t));\n\n\treturn (\n\t\t<div className=\"attribute\">\n\t\t\t<div className=\"attribute-title\">{attribute.name}</div>\n\t\t\t{values}\n\t\t</div>\n\t);\n};\n\nconst AttributeFilter = ({\n\tattributes,\n\tsetFilterAttribute,\n\tunsetFilterAttribute\n}) => {\n\tconst attributeSets = attributes.map((attribute, index) => (\n\t\t<AttributeSet\n\t\t\tkey={index}\n\t\t\tattribute={attribute}\n\t\t\tsetFilterAttribute={setFilterAttribute}\n\t\t\tunsetFilterAttribute={unsetFilterAttribute}\n\t\t/>\n\t));\n\n\treturn <div className=\"attribute-filter\">{attributeSets}</div>;\n};\n\nexport default AttributeFilter;\n"]}