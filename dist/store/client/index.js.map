{"version":3,"sources":["../../../src/store/client/index.js"],"names":["analytics","initialState","window","__APP_STATE__","themeText","__APP_TEXT__","themeSettings","app","text","language","api","store","hydrate","document","getElementById","onPageLoad","state","navigator","addEventListener","serviceWorker","register","then","console","log","catch","registrationError"],"mappings":";;AAAA;;;;AACA;;;;AACA;;AACA;;AACA;;;;AACA;;AACA;;AACA;;;;AACA;;;;AACA;;IAAYA,S;;AACZ;;;;AACA;;;;;;;;AAEA,IAAMC,eAAeC,OAAOC,aAA5B;AACA,IAAMC,YAAYF,OAAOG,YAAzB;;AAEA,yBAAa;AACZC,gBAAeL,aAAaM,GAAb,CAAiBD,aADpB;AAEZE,OAAMJ,SAFM;AAGZK,WAAU,mBAAeA,QAHb;AAIZC;AAJY,CAAb;;AAOA,IAAMC,QAAQ,4CAEbV,YAFa,EAGb,iDAHa,CAAd;;AAMA,mBAASW,OAAT,CACC;AAAA;AAAA,GAAU,OAAOD,KAAjB;AACC;AAAA;AAAA;AACC;AADD;AADD,CADD,EAMCE,SAASC,cAAT,CAAwB,KAAxB,CAND;;AASAd,UAAUe,UAAV,CAAqB,EAAEC,OAAOf,YAAT,EAArB;;AAEA,IAAI,mBAAmBgB,SAAvB,EAAkC;AACjCf,QAAOgB,gBAAP,CAAwB,MAAxB,EAAgC,YAAM;AACrCD,YAAUE,aAAV,CACEC,QADF,CACW,QADX,EAEEC,IAFF,CAEO,wBAAgB;AACrBC,WAAQC,GAAR,CAAY,gBAAZ;AACA,GAJF,EAKEC,KALF,CAKQ,6BAAqB;AAC3BF,WAAQC,GAAR,CAAY,0BAAZ,EAAwCE,iBAAxC;AACA,GAPF;AAQA,EATD;AAUA","file":"index.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunkMiddleware from 'redux-thunk';\nimport { BrowserRouter } from 'react-router-dom';\nimport { initOnClient } from 'theme';\nimport clientSettings from './settings';\nimport reducers from '../shared/reducers';\nimport * as analytics from '../shared/analytics';\nimport App from '../shared/app';\nimport api from './api';\n\nconst initialState = window.__APP_STATE__;\nconst themeText = window.__APP_TEXT__;\n\ninitOnClient({\n\tthemeSettings: initialState.app.themeSettings,\n\ttext: themeText,\n\tlanguage: clientSettings.language,\n\tapi: api\n});\n\nconst store = createStore(\n\treducers,\n\tinitialState,\n\tapplyMiddleware(thunkMiddleware)\n);\n\nReactDOM.hydrate(\n\t<Provider store={store}>\n\t\t<BrowserRouter>\n\t\t\t<App />\n\t\t</BrowserRouter>\n\t</Provider>,\n\tdocument.getElementById('app')\n);\n\nanalytics.onPageLoad({ state: initialState });\n\nif ('serviceWorker' in navigator) {\n\twindow.addEventListener('load', () => {\n\t\tnavigator.serviceWorker\n\t\t\t.register('/sw.js')\n\t\t\t.then(registration => {\n\t\t\t\tconsole.log('SW registered.');\n\t\t\t})\n\t\t\t.catch(registrationError => {\n\t\t\t\tconsole.log('SW registration failed: ', registrationError);\n\t\t\t});\n\t});\n}\n"]}