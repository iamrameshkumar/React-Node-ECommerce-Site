{"version":3,"sources":["../../../src/store/server/redirects.js"],"names":["IGNORE_PATH","getRedirect","absoluteUrl","req","protocol","hostname","url","relativeUrl","relativePath","path","redirects","list","then","status","json","items","length","redirect","find","item","from","redirectUrlIsValid","startsWith","res","next","includes","to","catch"],"mappings":";;;;AAAA;;;;;;AAEA,IAAMA,cAAc,CAAC,GAAD,CAApB;;AAEA,IAAMC,cAAc,SAAdA,WAAc,MAAO;AAC1B,KAAMC,cAAiBC,IAAIC,QAArB,WAAmCD,IAAIE,QAAvC,GAAkDF,IAAIG,GAA5D;AACA,KAAMC,cAAcJ,IAAIG,GAAxB;AACA,KAAME,eAAeL,IAAIM,IAAzB;;AAEA,QAAO,cAAIC,SAAJ,CAAcC,IAAd,GAAqBC,IAArB,CAA0B,gBAAsB;AAAA,MAAnBC,MAAmB,QAAnBA,MAAmB;AAAA,MAAXC,IAAW,QAAXA,IAAW;;AACtD,MAAMC,QAAQD,IAAd;AACA,MAAIC,SAASA,MAAMC,MAAN,GAAe,CAA5B,EAA+B;AAC9B;;;;;AAKA,OAAMC,WAAWF,MAAMG,IAAN,CAChB;AAAA,WACCC,KAAKC,IAAL,KAAclB,WAAd,IACAiB,KAAKC,IAAL,KAAcb,WADd,IAEAY,KAAKC,IAAL,KAAcZ,YAHf;AAAA,IADgB,CAAjB;AAMA,UAAOS,QAAP;AACA;;AAED,SAAO,IAAP;AACA,EAlBM,CAAP;AAmBA,CAxBD;;AA0BA,IAAMI,qBAAqB,SAArBA,kBAAqB,MAAO;AACjC,QACCf,OACAA,IAAIU,MAAJ,GAAa,CADb,KAECV,IAAIgB,UAAJ,CAAe,GAAf,KACAhB,IAAIgB,UAAJ,CAAe,UAAf,CADA,IAEAhB,IAAIgB,UAAJ,CAAe,SAAf,CAJD,CADD;AAOA,CARD;;AAUA,IAAMZ,YAAY,SAAZA,SAAY,CAACP,GAAD,EAAMoB,GAAN,EAAWC,IAAX,EAAoB;AACrC,KAAIxB,YAAYyB,QAAZ,CAAqBtB,IAAIG,GAAzB,CAAJ,EAAmC;AAClCkB;AACA,EAFD,MAEO;AACNvB,cAAYE,GAAZ,EACES,IADF,CACO,oBAAY;AACjB,OAAIK,YAAYI,mBAAmBJ,SAASS,EAA5B,CAAhB,EAAiD;AAChDH,QAAIN,QAAJ,CAAaA,SAASJ,MAAtB,EAA8BI,SAASS,EAAvC;AACA,IAFD,MAEO;AACNF;AACA;AACD,GAPF,EAQEG,KARF,CAQQ,YAAM;AACZH;AACA,GAVF;AAWA;AACD,CAhBD;;kBAkBed,S","file":"redirects.js","sourcesContent":["import api from './api';\n\nconst IGNORE_PATH = ['/'];\n\nconst getRedirect = req => {\n\tconst absoluteUrl = `${req.protocol}://${req.hostname}${req.url}`;\n\tconst relativeUrl = req.url;\n\tconst relativePath = req.path;\n\n\treturn api.redirects.list().then(({ status, json }) => {\n\t\tconst items = json;\n\t\tif (items && items.length > 0) {\n\t\t\t/*\n      1. check absolute url\n      2. check relative url\n      3. check relative url (without query)\n      */\n\t\t\tconst redirect = items.find(\n\t\t\t\titem =>\n\t\t\t\t\titem.from === absoluteUrl ||\n\t\t\t\t\titem.from === relativeUrl ||\n\t\t\t\t\titem.from === relativePath\n\t\t\t);\n\t\t\treturn redirect;\n\t\t}\n\n\t\treturn null;\n\t});\n};\n\nconst redirectUrlIsValid = url => {\n\treturn (\n\t\turl &&\n\t\turl.length > 0 &&\n\t\t(url.startsWith('/') ||\n\t\t\turl.startsWith('https://') ||\n\t\t\turl.startsWith('http://'))\n\t);\n};\n\nconst redirects = (req, res, next) => {\n\tif (IGNORE_PATH.includes(req.url)) {\n\t\tnext();\n\t} else {\n\t\tgetRedirect(req)\n\t\t\t.then(redirect => {\n\t\t\t\tif (redirect && redirectUrlIsValid(redirect.to)) {\n\t\t\t\t\tres.redirect(redirect.status, redirect.to);\n\t\t\t\t} else {\n\t\t\t\t\tnext();\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch(() => {\n\t\t\t\tnext();\n\t\t\t});\n\t}\n};\n\nexport default redirects;\n"]}